# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:as400://SDCPROD;naming=system;libraries=r37files,r37mods,r37modsdta;translate binary=true;prompt=false
spring.datasource.username=webusr
spring.datasource.password=w3bd3v
spring.datasource.driver-class-name=com.ibm.as400.access.AS400JDBCDriver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=none
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DB2Dialect

#logging.level.org.springframework.web.client=DEBUG
#logging.level.org.apache.http=DEBUG
#log4j.logger.httpclient.wire=DEBUG
#logging.level.org.springframework.security.oauth2=DEBUG
spring.jackson.serialization-inclusion=non_null

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.hibernate: ERROR
#logging.level.org.hibernate.type.descriptor.sql=trace

sp.getalltrxadeproducts=R37MODS.GETSELECT

spring.security.user.password=admin

slack.webhook.url=https://hooks.slack.com/services/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

sql.ezrirxSQL=call R37MODS.GETWEBDESC('01','6260',?,'1','ITEM',?,'C')
sql.testCustomers=

eureka.client.registerWithEureka = false
eureka.client.fetchRegistry = false
eureka.instance.preferIpAddress=true
server.port = 8080